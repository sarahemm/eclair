@000
// test 8-bit immediate loads and adds
00000101    // ldi8.al  
00000111    // immediate for --^
01000101    // ldi8.bl
00001000    // immediate for --^
00001011    // add16.ab
// test 16-bit immediate loads and adds
@005
00000110    // ldi16.a
00000111    // immediate low byte for --^
00000110    // immediate high byte for --^
01000110    // ldi16.b
00001000    // immediate low byte for --^
00001100    // immediate high byte for --^
00001011    // add16.ab
// jump over the next instruction
@00C
00001110    // jmp
00010000    // immediate low byte for --^
00000000    // immediate high byte for --^
@00F
11111110    // halt (jumped over)
// write the PTB register to tell the machine we're running a process in page table block 0executing PID 0
@010
00000111    // ldi8.ptb
00000000    // immediate for --^
// write a page table entry to map 0 to 0 (writable) in PTB 0
@012
00000110    // ldi16.a
00000001    // immediate low byte for --^
11000000    // immediate high byte for --^
11000110    // ldi16.d
00000000    // immediate low byte for --^
00000000    // immediate high byte for --^
00010010    // write page table entry (addr from d, data from a)
@019
00010101    // write system flags
00000001    // immediate for --^ (enables paging, which means the next code runs from 0x419)
// done!
@01B
11111110    // halt
11111110    // halt
11111110    // halt
@419
11111110    // halt
11111110    // halt
11111110    // halt
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
00000000
