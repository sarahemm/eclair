@000
ldi8.flags  0x00  // system mode, paging off
// set up the system page table (so we can get to RAM)
// page table address 0 = 00000000_00000000 (first block of ROM)
@002
ldi16.a     0x0000
ldi16.d     0x0000
wrpte
// page table address 1 = 00000100_00000000 (first block of RAM)
@009
ldi16.a     0x0400
ldi16.d     0x0401
wrpte
// set up the stack pointer to the bottom of RAM and enable paging
@010
ldi16.sp    0x0400
ldi8.flags  0x01    // system mode, paging on
@015
push16.imm  0x0000  // just an extra word to make sure we pop to the right place
@018
push16.imm  0x001D  // this is where we pop16.pc to
// expect: reg_sp=00000100_00000100
// expect: ram[0x100000]=0x0
// expect: ram[0x100001]=0x0
// expect: ram[0x100002]=0x1d
// expect: ram[0x100003]=0x0
@01B
pop16.pc
@01C
halt
@01D
halt

// expect: pc=0x00001d
// expect: reg_sp=00000100_00000010
